/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "sequence",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "ProcessError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "ProcessSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canConfirm",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nextToProcess",
        type: "uint32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_confirmAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextToProcess",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_item",
        type: "bytes32",
      },
    ],
    name: "queueContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueEnd",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCurrentRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Common.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516136483803806136488339818101604052602081101561003357600080fd5b505160e081901b6001600160e01b03191660805263ffffffff166135df61006960003980610ff9528061108f52506135df6000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063928bc4b21161012a578063b31c01fb116100bd578063bf30a55d1161008c578063d88beda211610071578063d88beda2146108cd578063df034cd0146108d5578063f6d161021461090657610226565b8063bf30a55d14610870578063c19d93fb146108c557610226565b8063b31c01fb146106ef578063b61c19e8146107a1578063b80777ea14610847578063ba739a621461084f57610226565b80639d54f419116100f95780639d54f4191461068f5780639fa6a6e3146106c2578063a3f81d68146106ca578063ab91c7b0146106e757610226565b8063928bc4b214610511578063961681dc146105b757806396ae1a89146105bf5780639868a2731461066557610226565b806339992668116101bd57806351d7bcd71161018c5780637022b58e116101715780637022b58e146104e457806371bfb7b8146104ec5780638d3638f41461050957610226565b806351d7bcd7146104135780636188af0e1461043657610226565b806339992668146103da57806345630b1a146103e2578063456d0672146103ea5780635146366e1461040b57610226565b806325e3beda116101f957806325e3beda1461033b5780632bbd59ca146103555780632bef289214610393578063371d3071146103b057610226565b8063016bcc351461022b578063146901db1461024a57806314cfabb31461025257806319d9d21a1461026e575b600080fd5b6102486004803603602081101561024157600080fd5b503561090e565b005b610248610927565b61025a610931565b604080519115158252519081900360200190f35b610248600480360360a081101561028457600080fd5b81359160208101918101906080810160608201356401000000008111156102aa57600080fd5b8201836020820111156102bc57600080fd5b803590602001918460018302840111640100000000831117156102de57600080fd5b9193909290916020810190356401000000008111156102fc57600080fd5b82018360208201111561030e57600080fd5b8035906020019184600183028401116401000000008311171561033057600080fd5b50909250905061095d565b610343610bba565b60408051918252519081900360200190f35b6103726004803603602081101561036b57600080fd5b5035610bc0565b6040518082600281111561038257fe5b815260200191505060405180910390f35b61025a600480360360208110156103a957600080fd5b5035610bd5565b61025a60048036036104408110156103c757600080fd5b5080359060208101906104200135610bea565b610343610d0a565b610343610d10565b6103f2610d25565b6040805163ffffffff9092168252519081900360200190f35b610343610d31565b6102486004803603602081101561042957600080fd5b503563ffffffff16610d3b565b610248600480360361044081101561044d57600080fd5b81019060208101813564010000000081111561046857600080fd5b82018360208201111561047a57600080fd5b8035906020019184600183028401116401000000008311171561049c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610d72565b610248610dfe565b6103436004803603602081101561050257600080fd5b5035610fe5565b6103f2610ff7565b61025a6004803603602081101561052757600080fd5b81019060208101813564010000000081111561054257600080fd5b82018360208201111561055457600080fd5b8035906020019184600183028401116401000000008311171561057657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061101b945050505050565b6103f2611708565b61025a600480360360208110156105d557600080fd5b8101906020810181356401000000008111156105f057600080fd5b82018360208201111561060257600080fd5b8035906020019184600183028401116401000000008311171561062457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611714945050505050565b610343600480360361044081101561067c57600080fd5b508035906020810190610420013561171f565b610248600480360360208110156106a557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661175d565b6103436117a4565b61025a600480360360208110156106e057600080fd5b50356117aa565b6103436117d1565b6102486004803603606081101561070557600080fd5b81359160208101359181019060608101604082013564010000000081111561072c57600080fd5b82018360208201111561073e57600080fd5b8035906020019184600183028401116401000000008311171561076057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117dd945050505050565b610248600480360360208110156107b757600080fd5b8101906020810181356401000000008111156107d257600080fd5b8201836020820111156107e457600080fd5b8035906020019184600183028401116401000000008311171561080657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611ac1945050505050565b610343611b4b565b610857611b4f565b6040805192835260208301919091528051918290030190f35b610248600480360360a081101561088657600080fd5b5063ffffffff813581169173ffffffffffffffffffffffffffffffffffffffff6020820135169160408201359160608101359160809091013516611b9d565b610372611d4a565b610343611d6b565b6108dd611d72565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610343611d8e565b6035819055600090815260686020526040902060019055565b61092f611d9a565b565b600061093d6001611ddb565b1580159061095857506109586109536001611e13565b6117aa565b905090565b600260345474010000000000000000000000000000000000000000900460ff16600281111561098857fe5b14156109f557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f8601819004810282018101909252848152610a379188918835918890889081908401838280828437600092019190915250611eb492505050565b8015610a865750610a8686866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611eb492505050565b8015610a9757508435602086013514155b15610bb257610aa4610927565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b613a9881565b606a6020526000908152604090205460ff1681565b6000610be2600183611f46565b90505b919050565b6000806000858152606a602052604090205460ff166002811115610c0a57fe5b14610c7657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610cac858560208060200260405190810160405280929190826020800280828437600092019190915250879150611fc29050565b9050610cb7816117aa565b15610cfd5750506000838152606a6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610d03565b60009150505b9392505050565b60665481565b6065546000906109589063ffffffff1661206d565b60675463ffffffff1681565b6000610958610d10565b606580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610d8483805190602001208383610bea565b610def57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610df88361101b565b50505050565b600260345474010000000000000000000000000000000000000000900460ff166002811115610e2957fe5b1415610e9657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b610ea06001611ddb565b610f0b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f2170656e64696e67000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080610f186001611ddb565b90505b600081118015610f335750610f336109536001611e13565b15610f6b57610f4260016120e2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610f1b565b81610fd757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f2174696d65000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610fdf61092f565b50603555565b60686020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080611028838261221b565b905060006110577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661223f565b905060006110867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000841661227e565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166110da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000085166122af565b63ffffffff161461114c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b60016000838152606a602052604090205460ff16600281111561116b57fe5b146111d757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f2170656e64696e67000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60695460ff1660011461124b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b606980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000838152606a60205260409020805490911660021790556067805463ffffffff60018401167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909116179055620d32e85a101561133757604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006113647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000085166122e0565b9050606073ffffffffffffffffffffffffffffffffffffffff8216620cf8506113ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000088166122f3565b6113d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008916612323565b61142e6114077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008b16612354565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000166123c5565b604051602401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611480578181015183820152602001611468565b50505050905090810190601f1680156114ad5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f56d5d47500000000000000000000000000000000000000000000000000000000178152905182519297509550859450925090508083835b6020831061157557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611538565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146115d8576040519150601f19603f3d011682016040523d82523d6000602084013e6115dd565b606091505b50909650905085156116195760405184907fdc8a2c27342659cbe87c6c49e4515c64faa8c97ba6a2f260cbf33d84d7bd832090600090a26116d2565b8173ffffffffffffffffffffffffffffffffffffffff168363ffffffff16857fdffcee52db78cb2d1f525b8d7edd630ea062884e733aa26c201d7ce1843eccab846040518080602001828103825283818151815260200191508051906020019080838360005b8381101561169757818101518382015260200161167f565b50505050905090810190601f1680156116c45780820380516001836020036101000a031916815260200191505b509250505060405180910390a45b5050606980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550919392505050565b60655463ffffffff1681565b6000610be28261101b565b6000611755848460208060200260405190810160405280929190826020800280828437600092019190915250869150611fc29050565b949350505050565b603480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60355481565b600081815260686020526040812054806117c8576000915050610be5565b42101592915050565b60006109586001611ddb565b600260345474010000000000000000000000000000000000000000900460ff16600281111561180857fe5b141561187557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b60006118816001611ddb565b1115611903576118916001612409565b83146118fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420656e64206f6620717565756500000000000000000000000000000000604482015290519081900360640190fd5b611973565b826035541461197357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b61197e838383611eb4565b6119e957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6261642073696700000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6119f161092f565b6066546000838152606860205260409020429091019055611a13600183612446565b5060655460408051602080825284518183015284518694889463ffffffff909116937f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b2938893919283929083019185019080838360005b83811015611a82578181015183820152602001611a6a565b50505050905090810190601f168015611aaf5780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b6000611acd828261221b565b90506001606a6000611b007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851661223f565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611b4257fe5b02179055505050565b4290565b600080611b5c6001611ddb565b15611b8457611b6b6001611e13565b6000818152606860205260409020549092509050611b99565b50506035546000818152606860205260409020545b9091565b600054610100900460ff1680611bb65750611bb66124b3565b80611bc4575060005460ff16155b611c19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613498602e913960400191505060405180910390fd5b600054610100900460ff16158015611c7f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b611c88856124c4565b606980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556065805463ffffffff808a167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000928316179092556035879055600087815260686020526040902092909255606685905560678054918516919092161790558015610bb257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050505050565b60345474010000000000000000000000000000000000000000900460ff1681565b620cf85081565b60345473ffffffffffffffffffffffffffffffffffffffff1681565b60006109586001612409565b603480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000179055565b80546000906fffffffffffffffffffffffffffffffff700100000000000000000000000000000000820481169116611755828261265a565b6000611e1e82612674565b15611e8a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f456d707479000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5080546fffffffffffffffffffffffffffffffff1660009081526001909101602052604090205490565b600080611ebf610d10565b8585604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050611f00816126a3565b60345490915073ffffffffffffffffffffffffffffffffffffffff16611f2682856126f4565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b81546000906fffffffffffffffffffffffffffffffff165b835470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff168111611fb6576000818152600185016020526040902054831415611fae576001915050611fbc565b600101611f5e565b50600090505b92915050565b8260005b602081101561206557600183821c166000858360208110611fe357fe5b602002015190508160011415612029578084604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120935061205b565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101611fc6565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4f5054494353000000000000000000000000000000000000000000000000000060248401528151808403600a018152602a909301909152815191012090565b80546000906fffffffffffffffffffffffffffffffff70010000000000000000000000000000000082048116911661211a828261265a565b61218557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f456d707479000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6fffffffffffffffffffffffffffffffff81166000908152600185016020526040902054925082156121d6576fffffffffffffffffffffffffffffffff811660009081526001850160205260408120555b83547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001919091016fffffffffffffffffffffffffffffffff1617909255919050565b81516000906020840161223664ffffffffff8516828461278e565b95945050505050565b60008061224b836127e4565b6bffffffffffffffffffffffff1690506000612266846127f8565b6bffffffffffffffffffffffff169091209392505050565b6000610be27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166024600461280c565b6000610be27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166028600461280c565b6000610be26122ee8361282d565b61285e565b6000610be27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831682600461280c565b6000610be27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831660046020612861565b6000610be2604c806123877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000086166127f8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612a0c565b60606000806123d3846127f8565b6bffffffffffffffffffffffff16905060405191508192506123f88483602001612a92565b508181016020016040529052919050565b805470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1660009081526001909101602052604090205490565b81546fffffffffffffffffffffffffffffffff8082167001000000000000000000000000000000009283900482166001019182169092029190911783558115611fbc576fffffffffffffffffffffffffffffffff8116600090815260019390930160205260409092205590565b60006124be30612bbe565b15905090565b600054610100900460ff16806124dd57506124dd6124b3565b806124eb575060005460ff16155b612540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613498602e913960400191505060405180910390fd5b600054610100900460ff161580156125a657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6125ae612bc4565b603480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055801561265657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b60019103016fffffffffffffffffffffffffffffffff1690565b546fffffffffffffffffffffffffffffffff808216700100000000000000000000000000000000909204161090565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6000815160411461276657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61278486828585612ce2565b9695505050505050565b60008061279b8484612ed0565b90506040518111156127ab575060005b806127d9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610d03565b612236858585612f42565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b60008160200360080260ff16612823858585612861565b901c949350505050565b6000610be27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c6020612861565b90565b600060ff821661287357506000610d03565b61287c846127f8565b6bffffffffffffffffffffffff166128978460ff8516612ed0565b1115612976576128d86128a9856127e4565b6bffffffffffffffffffffffff166128c0866127f8565b6bffffffffffffffffffffffff16858560ff16612f55565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561293b578181015183820152602001612923565b50505050905090810190601f1680156129685780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff1611156129d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806134e8603a913960400191505060405180910390fd5b6008820260006129e2866127e4565b6bffffffffffffffffffffffff16905060006129fd836130b0565b91909501511695945050505050565b600080612a18866127e4565b6bffffffffffffffffffffffff169050612a31866130f9565b612a4585612a3f8489612ed0565b90612ed0565b1115612a74577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050611755565b612a7e8186612ed0565b90506127848364ffffffffff16828661278e565b6000612a9d83613123565b612af2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806135226028913960400191505060405180910390fd5b612afb83613135565b612b50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061354a602b913960400191505060405180910390fd5b6000612b5b846127f8565b6bffffffffffffffffffffffff1690506000612b76856127e4565b6bffffffffffffffffffffffff1690506000604051905084811115612b9b5760206060fd5b8285848460045afa50612784612bb087613172565b64ffffffffff168685612f42565b3b151590565b600054610100900460ff1680612bdd5750612bdd6124b3565b80612beb575060005460ff16155b612c40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613498602e913960400191505060405180910390fd5b600054610100900460ff16158015612ca657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b612cb06001613178565b8015612cdf57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612d5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134556022913960400191505060405180910390fd5b8360ff16601b1480612d7257508360ff16601c145b612dc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134c66022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612e23573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661223657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b81810182811015611fbc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60606000612f62866131bc565b9150506000612f70866131bc565b9150506000612f7e866131bc565b9150506000612f8c866131bc565b915050838383836040516020018080613575603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a820152605001602161347782397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b6000613104826127f8565b61310d836127e4565b016bffffffffffffffffffffffff169050919050565b600061312e82613290565b1592915050565b600061314082613172565b64ffffffffff1664ffffffffff141561315b57506000610be5565b6000613166836130f9565b60405110199392505050565b60d81c90565b80546fffffffffffffffffffffffffffffffff16612cdf5780547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016600117815550565b600080601f5b600f8160ff1611156132245760ff600882021684901c6131e1816132b8565b61ffff16841793508160ff166010146131fc57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016131c2565b50600f5b60ff8160ff16101561328a5760ff600882021684901c613247816132b8565b61ffff16831792508160ff1660001461326257601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01613228565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b60006132ca60048360ff16901c6132e8565b60ff161760081b62ffff00166132df826132e8565b60ff1617919050565b600060f08083179060ff82161415613304576030915050610be5565b8060ff1660f1141561331a576031915050610be5565b8060ff1660f21415613330576032915050610be5565b8060ff1660f31415613346576033915050610be5565b8060ff1660f4141561335c576034915050610be5565b8060ff1660f51415613372576035915050610be5565b8060ff1660f61415613388576036915050610be5565b8060ff1660f7141561339e576037915050610be5565b8060ff1660f814156133b4576038915050610be5565b8060ff1660f914156133ca576039915050610be5565b8060ff1660fa14156133e0576061915050610be5565b8060ff1660fb14156133f6576062915050610be5565b8060ff1660fc141561340c576063915050610be5565b8060ff1660fd1415613422576064915050610be5565b8060ff1660fe1415613438576065915050610be5565b8060ff1660ff141561344e576066915050610be5565b5091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220511ef26aa5416529302201d72cd7e7c17cf6e28d4b992c9dfc3381e5f9bf1a8f64736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(_localDomain, overrides || {}) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_localDomain, overrides || {});
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
