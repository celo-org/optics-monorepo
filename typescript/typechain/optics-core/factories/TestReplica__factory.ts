/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "ProcessError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "ProcessSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Common.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051612e1f380380612e1f8339818101604052606081101561003357600080fd5b50516001600160e01b031960e082901b16608052620cf85060a0819052613a9860c081905263ffffffff90921691612d8761009860003980610ac55280610fac525080610f8b5280611086528061183e525080610d235280610d5b5250612d876000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063961681dc116100f9578063b61c19e811610097578063d88beda211610071578063d88beda2146107b8578063df034cd0146107c0578063e7e7a7b7146107f1578063ffa1ad741461083c576101c4565b8063b61c19e814610702578063b80777ea146107a8578063c19d93fb146107b0576101c4565b80639d54f419116100d35780639d54f419146105e3578063a33a311314610616578063a3f81d6814610633578063b31c01fb14610650576101c4565b8063961681dc1461050b57806396ae1a89146105135780639868a273146105b9576101c4565b80635146366e1161016657806367a6771d1161014057806367a6771d1461041f57806371bfb7b8146104275780638d3638f414610444578063928bc4b214610465576101c4565b80635146366e1461034657806351d7bcd71461034e5780636188af0e14610371576101c4565b80632bbd59ca116101a25780632bbd59ca146102ba578063371d3071146102f8578063399926681461033657806345630b1a1461033e576101c4565b8063146901db146101c957806319d9d21a146101d357806325e3beda146102a0575b600080fd5b6101d161085a565b005b6101d1600480360360a08110156101e957600080fd5b813591602081019181019060808101606082013564010000000081111561020f57600080fd5b82018360208201111561022157600080fd5b8035906020019184600183028401116401000000008311171561024357600080fd5b91939092909160208101903564010000000081111561026157600080fd5b82018360208201111561027357600080fd5b8035906020019184600183028401116401000000008311171561029557600080fd5b509092509050610864565b6102a8610ac3565b60408051918252519081900360200190f35b6102d7600480360360208110156102d057600080fd5b5035610ae7565b604051808260028111156102e757fe5b815260200191505060405180910390f35b610322600480360361044081101561030f57600080fd5b5080359060208101906104200135610afc565b604080519115158252519081900360200190f35b6102a8610c1c565b6102a8610c22565b6102a8610c3c565b6101d16004803603602081101561036457600080fd5b503563ffffffff16610c46565b6101d1600480360361044081101561038857600080fd5b8101906020810181356401000000008111156103a357600080fd5b8201836020820111156103b557600080fd5b803590602001918460018302840111640100000000831117156103d757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610c7d565b6102a8610d09565b6102a86004803603602081101561043d57600080fd5b5035610d0f565b61044c610d21565b6040805163ffffffff9092168252519081900360200190f35b6103226004803603602081101561047b57600080fd5b81019060208101813564010000000081111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111640100000000831117156104ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d45945050505050565b61044c611453565b6103226004803603602081101561052957600080fd5b81019060208101813564010000000081111561054457600080fd5b82018360208201111561055657600080fd5b8035906020019184600183028401116401000000008311171561057857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061145f945050505050565b6102a860048036036104408110156105d057600080fd5b5080359060208101906104200135611470565b6101d1600480360360208110156105f957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166114ae565b6101d16004803603602081101561062c57600080fd5b50356114fb565b6103226004803603602081101561064957600080fd5b5035611512565b6101d16004803603606081101561066657600080fd5b81359160208101359181019060608101604082013564010000000081111561068d57600080fd5b82018360208201111561069f57600080fd5b803590602001918460018302840111640100000000831117156106c157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061153b945050505050565b6101d16004803603602081101561071857600080fd5b81019060208101813564010000000081111561073357600080fd5b82018360208201111561074557600080fd5b8035906020019184600183028401116401000000008311171561076757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061178b945050505050565b6102a8611815565b6102d7611819565b6102a861183c565b6107c8611860565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101d16004803603608081101561080757600080fd5b5063ffffffff8135169073ffffffffffffffffffffffffffffffffffffffff6020820135169060408101359060600135611882565b610844611a19565b6040805160ff9092168252519081900360200190f35b610862611a1e565b565b6002600054760100000000000000000000000000000000000000000000900460ff16600281111561089157fe5b14156108fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f86018190048102820181019092528481526109409188918835918890889081908401838280828437600092019190915250611a6192505050565b801561098f575061098f86866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a6192505050565b80156109a057508435602086013514155b15610abb576109ad61085a565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60356020526000908152604090205460ff1681565b60008060008581526035602052604090205460ff166002811115610b1c57fe5b14610b8857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610bbe858560208060200260405190810160405280929190826020800280828437600092019190915250879150611af99050565b9050610bc981611512565b15610c0f575050600083815260356020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610c15565b60009150505b9392505050565b60325481565b603154600090610c379063ffffffff16611ba4565b905090565b6000610c37610c22565b603180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610c8f83805190602001208383610afc565b610cfa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610d0383610d45565b50505050565b60015481565b60346020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610d528382611c19565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610da67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611c3d565b63ffffffff1614610e1857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610e457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611c6e565b9050600160008281526035602052604090205460ff166002811115610e6657fe5b14610ed257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2170726f76656e00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60335460ff16600114610f4657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000828152603560205260409020805490911660021790557f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000015a101561103c57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006110697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416611cad565b9050606073ffffffffffffffffffffffffffffffffffffffff82167f00000000000000000000000000000000000000000000000000000000000000006110d07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008716611cc0565b6110fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008816611cf0565b6111506111297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008a16611d21565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016611d92565b604051602401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111a257818101518382015260200161118a565b50505050905090810190601f1680156111cf5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f56d5d47500000000000000000000000000000000000000000000000000000000178152905182519297509550859450925090508083835b6020831061129757805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161125a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146112fa576040519150601f19603f3d011682016040523d82523d6000602084013e6112ff565b606091505b509095509050841561133b5760405183907fdc8a2c27342659cbe87c6c49e4515c64faa8c97ba6a2f260cbf33d84d7bd832090600090a261141e565b73ffffffffffffffffffffffffffffffffffffffff821661137d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008616611dd6565b63ffffffff16847fdffcee52db78cb2d1f525b8d7edd630ea062884e733aa26c201d7ce1843eccab846040518080602001828103825283818151815260200191508051906020019080838360005b838110156113e35781810151838201526020016113cb565b50505050905090810190601f1680156114105780820380516001836020036101000a031916815260200191505b509250505060405180910390a45b5050603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055509092915050565b60315463ffffffff1681565b600061146a82610d45565b92915050565b60006114a6848460208060200260405190810160405280929190826020800280828437600092019190915250869150611af99050565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b600181815560009182526034602052604090912055565b60008181526034602052604081205480611530576000915050611536565b42101590505b919050565b6002600054760100000000000000000000000000000000000000000000900460ff16600281111561156857fe5b14156115d557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b600154831461164557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b611650838383611a61565b6116bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2175706461746572207369670000000000000000000000000000000000000000604482015290519081900360640190fd5b6116c3610862565b6032546000838152603460209081526040808320429094019093556001859055603154835182815285518184015285518795899563ffffffff909416947f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b29489949384938401928601918190849084905b8381101561174c578181015183820152602001611734565b50505050905090810190601f1680156117795780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b60006117978282611c19565b90506001603560006117ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516611c6e565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600281111561180c57fe5b02179055505050565b4290565b600054760100000000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610100900460ff168061189b575061189b611e07565b806118a9575060005460ff16155b6118fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612c40602e913960400191505060405180910390fd5b600054610100900460ff1615801561196457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b61196d84611e18565b6033805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155603180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff881617905583815560008481526034602052604090205560328290558015611a1257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050505050565b600081565b600080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16760200000000000000000000000000000000000000000000179055565b600080611a6c610c22565b8585604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050611aad81611fad565b60005490915062010000900473ffffffffffffffffffffffffffffffffffffffff16611ad98285611ffe565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b8260005b6020811015611b9c57600183821c166000858360208110611b1a57fe5b602002015190508160011415611b605780846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209350611b92565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101611afd565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4f5054494353000000000000000000000000000000000000000000000000000060248401528151808403600a018152602a909301909152815191012090565b815160009060208401611c3464ffffffffff85168284612098565b95945050505050565b600061146a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602860046120ee565b600080611c7a8361210f565b6bffffffffffffffffffffffff1690506000611c9584612123565b6bffffffffffffffffffffffff169091209392505050565b600061146a611cbb83612137565b612168565b600061146a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083168260046120ee565b600061146a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166004602061216b565b600061146a604c80611d547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008616612123565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612316565b6060600080611da084612123565b6bffffffffffffffffffffffff1690506040519150819250611dc5848360200161239c565b508181016020016040529052919050565b600061146a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602460046120ee565b6000611e12306124c8565b15905090565b600054610100900460ff1680611e315750611e31611e07565b80611e3f575060005460ff16155b611e94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612c40602e913960400191505060405180910390fd5b600054610100900460ff16158015611efa57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff851602177fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff167601000000000000000000000000000000000000000000001790558015611fa957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6000815160411461207057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61208e868285856124ce565b9695505050505050565b6000806120a584846126bc565b90506040518111156120b5575060005b806120e3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610c15565b611c3485858561272e565b60008160200360080260ff1661210585858561216b565b901c949350505050565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b600061146a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c602061216b565b90565b600060ff821661217d57506000610c15565b61218684612123565b6bffffffffffffffffffffffff166121a18460ff85166126bc565b1115612280576121e26121b38561210f565b6bffffffffffffffffffffffff166121ca86612123565b6bffffffffffffffffffffffff16858560ff16612741565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561224557818101518382015260200161222d565b50505050905090810190601f1680156122725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff1611156122dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180612c90603a913960400191505060405180910390fd5b6008820260006122ec8661210f565b6bffffffffffffffffffffffff16905060006123078361289c565b91909501511695945050505050565b6000806123228661210f565b6bffffffffffffffffffffffff16905061233b866128e5565b61234f8561234984896126bc565b906126bc565b111561237e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009150506114a6565b61238881866126bc565b905061208e8364ffffffffff168286612098565b60006123a78361290f565b6123fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612cca6028913960400191505060405180910390fd5b61240583612921565b61245a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612cf2602b913960400191505060405180910390fd5b600061246584612123565b6bffffffffffffffffffffffff16905060006124808561210f565b6bffffffffffffffffffffffff16905060006040519050848111156124a55760206060fd5b8285848460045afa5061208e6124ba8761295e565b64ffffffffff16868561272e565b3b151590565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612549576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612bfd6022913960400191505060405180910390fd5b8360ff16601b148061255e57508360ff16601c145b6125b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c6e6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561260f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611c3457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b8181018281101561146a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b6060600061274e86612964565b915050600061275c86612964565b915050600061276a86612964565b915050600061277886612964565b915050838383836040516020018080612d1d603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a8201526050016021612c1f82397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b60006128f082612123565b6128f98361210f565b016bffffffffffffffffffffffff169050919050565b600061291a82612a38565b1592915050565b600061292c8261295e565b64ffffffffff1664ffffffffff141561294757506000611536565b6000612952836128e5565b60405110199392505050565b60d81c90565b600080601f5b600f8160ff1611156129cc5760ff600882021684901c61298981612a60565b61ffff16841793508160ff166010146129a457601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161296a565b50600f5b60ff8160ff161015612a325760ff600882021684901c6129ef81612a60565b61ffff16831792508160ff16600014612a0a57601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016129d0565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b6000612a7260048360ff16901c612a90565b60ff161760081b62ffff0016612a8782612a90565b60ff1617919050565b600060f08083179060ff82161415612aac576030915050611536565b8060ff1660f11415612ac2576031915050611536565b8060ff1660f21415612ad8576032915050611536565b8060ff1660f31415612aee576033915050611536565b8060ff1660f41415612b04576034915050611536565b8060ff1660f51415612b1a576035915050611536565b8060ff1660f61415612b30576036915050611536565b8060ff1660f71415612b46576037915050611536565b8060ff1660f81415612b5c576038915050611536565b8060ff1660f91415612b72576039915050611536565b8060ff1660fa1415612b88576061915050611536565b8060ff1660fb1415612b9e576062915050611536565b8060ff1660fc1415612bb4576063915050611536565b8060ff1660fd1415612bca576064915050611536565b8060ff1660fe1415612be0576065915050611536565b8060ff1660ff1415612bf6576066915050611536565b5091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a26469706673582212201d048ff92ead8fef4ce82d4647b80c6df866b70d9494169234f2e3277744dff664736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    ) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    );
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
