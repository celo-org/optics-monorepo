/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PingPongRouter,
  PingPongRouterInterface,
} from "../PingPongRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "matchId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPing",
        type: "bool",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "matchId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPing",
        type: "bool",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_router",
        type: "bytes32",
      },
    ],
    name: "enrollRemoteRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
    ],
    name: "initiatePingPongMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "remotes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "setXAppConnectionManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xAppConnectionManager",
    outputs: [
      {
        internalType: "contract XAppConnectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aa538038062001aa5833981810160405260208110156200003757600080fd5b505162000044816200004b565b50620003ac565b600054610100900460ff1680620000675750620000676200011b565b8062000076575060005460ff16155b620000b35760405162461bcd60e51b815260040180806020018281038252602e81526020018062001a77602e913960400191505060405180910390fd5b600054610100900460ff16158015620000df576000805460ff1961ff0019909116610100171660011790555b606580546001600160a01b0319166001600160a01b0384161790556200010462000139565b801562000117576000805461ff00191690555b5050565b60006200013330620001f760201b6200096e1760201c565b15905090565b600054610100900460ff1680620001555750620001556200011b565b8062000164575060005460ff16155b620001a15760405162461bcd60e51b815260040180806020018281038252602e81526020018062001a77602e913960400191505060405180910390fd5b600054610100900460ff16158015620001cd576000805460ff1961ff0019909116610100171660011790555b620001d7620001fd565b620001e1620002a5565b8015620001f4576000805461ff00191690555b50565b3b151590565b600054610100900460ff1680620002195750620002196200011b565b8062000228575060005460ff16155b620002655760405162461bcd60e51b815260040180806020018281038252602e81526020018062001a77602e913960400191505060405180910390fd5b600054610100900460ff16158015620001e1576000805460ff1961ff0019909116610100171660011790558015620001f4576000805461ff001916905550565b600054610100900460ff1680620002c15750620002c16200011b565b80620002d0575060005460ff16155b6200030d5760405162461bcd60e51b815260040180806020018281038252602e81526020018062001a77602e913960400191505060405180910390fd5b600054610100900460ff1615801562000339576000805460ff1961ff0019909116610100171660011790555b600062000345620003a8565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015620001f4576000805461ff001916905550565b3390565b6116bb80620003bc6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a6116100765780638da5cb5b1161005b5780638da5cb5b14610226578063b49c53a71461022e578063f2fde38b14610257576100a3565b8063715018a6146101e957806383bbb806146101f1576100a3565b8063025ed069146100a85780633339df96146100cd57806341bdc8b5146100fe57806356d5d47514610131575b600080fd5b6100cb600480360360208110156100be57600080fd5b503563ffffffff1661028a565b005b6100d56102da565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100cb6004803603602081101561011457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102f6565b6100cb6004803603606081101561014757600080fd5b63ffffffff8235169160208101359181019060608101604082013564010000000081111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460018302840111640100000000831117156101a857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103e5945050505050565b6100cb6105c6565b6102146004803603602081101561020757600080fd5b503563ffffffff166106dd565b60408051918252519081900360200190f35b6100d56106ef565b6100cb6004803603604081101561024457600080fd5b5063ffffffff813516906020013561070b565b6100cb6004803603602081101561026d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107cc565b60c980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008116600163ffffffff928316818101909316919091179092556102d58383836000610978565b505050565b60655473ffffffffffffffffffffffffffffffffffffffff1681565b6102fe610ae1565b73ffffffffffffffffffffffffffffffffffffffff1661031c6106ef565b73ffffffffffffffffffffffffffffffffffffffff161461039e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6103ee33610ae5565b61045957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f217265706c696361000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b82826104658282610b8e565b6104d057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f2172656d6f746520726f75746572000000000000000000000000000000000000604482015290519081900360640190fd5b60006104dc8482610bad565b90506105097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008216610bd1565b1561051d576105188682610bf1565b6105be565b6105487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008216610bfe565b15610557576105188682610c07565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f2176616c696420616374696f6e00000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050565b6105ce610ae1565b73ffffffffffffffffffffffffffffffffffffffff166105ec6106ef565b73ffffffffffffffffffffffffffffffffffffffff161461066e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60976020526000908152604090205481565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b610713610ae1565b73ffffffffffffffffffffffffffffffffffffffff166107316106ef565b73ffffffffffffffffffffffffffffffffffffffff16146107b357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b63ffffffff909116600090815260976020526040902055565b6107d4610ae1565b73ffffffffffffffffffffffffffffffffffffffff166107f26106ef565b73ffffffffffffffffffffffffffffffffffffffff161461087457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806115d06026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b803b15155b919050565b600061098385610c14565b905060008461099b576109968484610c96565b6109a5565b6109a58484610ce1565b90506109af610cea565b73ffffffffffffffffffffffffffffffffffffffff1663fa31de018784846040518463ffffffff1660e01b8152600401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a2b578181015183820152602001610a13565b50505050905090810190601f168015610a585780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610a7957600080fd5b505af1158015610a8d573d6000803e3d6000fd5b5050604080518681528815156020820152815163ffffffff808a1695508b1693507fc33c46696831ce09e40c8eb57b62d0d0cd48c408d38fa19f9a8ba3138415db10929181900390910190a3505050505050565b3390565b606554604080517f5190bc5300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015291516000939290921691635190bc5391602480820192602092909190829003018186803b158015610b5c57600080fd5b505afa158015610b70573d6000803e3d6000fd5b505050506040513d6020811015610b8657600080fd5b505192915050565b63ffffffff821660009081526097602052604090205481145b92915050565b815160009060208401610bc864ffffffffff85168284610d86565b95945050505050565b600060015b610bdf83610de7565b6002811115610bea57fe5b1492915050565b60016102d5838284610e22565b60006002610bd6565b60006102d5838284610e22565b63ffffffff81166000908152609760205260409020548061097357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2172656d6f746500000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b606060025b8383604051602001808460ff1660f81b81526001018363ffffffff1660e01b81526004018281526020019350505050604051602081830303815290604052905092915050565b60606001610c9b565b606554604080517f9fa92f9d000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691639fa92f9d916004808301926020929190829003018186803b158015610d5557600080fd5b505afa158015610d69573d6000803e3d6000fd5b505050506040513d6020811015610d7f57600080fd5b5051905090565b600080610d938484610ede565b9050604051811115610da3575060005b80610dd1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610de0565b610ddc858585610f50565b9150505b9392505050565b6000610e147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316610f63565b60ff166002811115610ba757fe5b6000610e4f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316610f69565b90506000610e7e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416610f9a565b604080518481528615156020820152815192935063ffffffff80851693908916927faa15aa1b86193c9d924f48e0c48b3cba78f17e281109c7de2f865c5a1c3d7009928290030190a3610ed78585158385600101610978565b5050505050565b81810182811015610ba757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60d81c90565b6000610ba77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831660016020610fc7565b6000610ba77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600160045b60008160200360080260ff16610fde858585610fe8565b901c949350505050565b600060ff8216610ffa57506000610de0565b61100384611193565b6bffffffffffffffffffffffff1661101e8460ff8516610ede565b11156110fd5761105f611030856111a7565b6bffffffffffffffffffffffff1661104786611193565b6bffffffffffffffffffffffff16858560ff166111bb565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110c25781810151838201526020016110aa565b50505050905090810190601f1680156110ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff16111561115a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611617603a913960400191505060405180910390fd5b600882026000611169866111a7565b6bffffffffffffffffffffffff169050600061118483611316565b91909501511695945050505050565b60181c6bffffffffffffffffffffffff1690565b60781c6bffffffffffffffffffffffff1690565b606060006111c88661135f565b91505060006111d68661135f565b91505060006111e48661135f565b91505060006111f28661135f565b915050838383836040516020018080611651603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a82015260500160216115f682397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600080601f5b600f8160ff1611156113c75760ff600882021684901c61138481611433565b61ffff16841793508160ff1660101461139f57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611365565b50600f5b60ff8160ff16101561142d5760ff600882021684901c6113ea81611433565b61ffff16831792508160ff1660001461140557601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016113cb565b50915091565b600061144560048360ff16901c611463565b60ff161760081b62ffff001661145a82611463565b60ff1617919050565b600060f08083179060ff8216141561147f576030915050610973565b8060ff1660f11415611495576031915050610973565b8060ff1660f214156114ab576032915050610973565b8060ff1660f314156114c1576033915050610973565b8060ff1660f414156114d7576034915050610973565b8060ff1660f514156114ed576035915050610973565b8060ff1660f61415611503576036915050610973565b8060ff1660f71415611519576037915050610973565b8060ff1660f8141561152f576038915050610973565b8060ff1660f91415611545576039915050610973565b8060ff1660fa141561155b576061915050610973565b8060ff1660fb1415611571576062915050610973565b8060ff1660fc1415611587576063915050610973565b8060ff1660fd141561159d576064915050610973565b8060ff1660fe14156115b3576065915050610973565b8060ff1660ff14156115c9576066915050610973565b5091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573732e20417474656d7074656420746f20696e646578206174206f666673657420307854797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220a77de4d37a638963ed44ae0acd80318cd9aea22bdae294caedc9d25d1fc3070f64736f6c63430007060033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564";

export class PingPongRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _xAppConnectionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PingPongRouter> {
    return super.deploy(
      _xAppConnectionManager,
      overrides || {}
    ) as Promise<PingPongRouter>;
  }
  getDeployTransaction(
    _xAppConnectionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_xAppConnectionManager, overrides || {});
  }
  attach(address: string): PingPongRouter {
    return super.attach(address) as PingPongRouter;
  }
  connect(signer: Signer): PingPongRouter__factory {
    return super.connect(signer) as PingPongRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PingPongRouterInterface {
    return new utils.Interface(_abi) as PingPongRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PingPongRouter {
    return new Contract(address, _abi, signerOrProvider) as PingPongRouter;
  }
}
