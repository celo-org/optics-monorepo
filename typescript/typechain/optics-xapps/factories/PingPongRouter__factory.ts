/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PingPongRouter,
  PingPongRouterInterface,
} from "../PingPongRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "matchId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPing",
        type: "bool",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "matchId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPing",
        type: "bool",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_router",
        type: "bytes32",
      },
    ],
    name: "enrollRemoteRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
    ],
    name: "initiatePingPongMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "setXAppConnectionManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xAppConnectionManager",
    outputs: [
      {
        internalType: "contract XAppConnectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a0138038062001a01833981810160405260208110156200003757600080fd5b5051600062000045620000b6565b6000805462010000600160b01b031916620100006001600160a01b038416908102919091178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620000af81620000ba60201b6200093e1760201c565b50620001a4565b3390565b600054610100900460ff1680620000d65750620000d662000180565b80620000e5575060005460ff16155b620001225760405162461bcd60e51b815260040180806020018281038252602e815260200180620019d3602e913960400191505060405180910390fd5b600054610100900460ff161580156200014e576000805460ff1961ff0019909116610100171660011790555b600280546001600160a01b0319166001600160a01b03841617905580156200017c576000805461ff00191690555b5050565b600062000198306200019e60201b62000a931760201c565b15905090565b3b151590565b61181f80620001b46000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101ce5780638da5cb5b146101d6578063b49c53a7146101de578063f2fde38b1461020757610088565b8063025ed0691461008d5780633339df96146100b257806341bdc8b5146100e357806356d5d47514610116575b600080fd5b6100b0600480360360208110156100a357600080fd5b503563ffffffff1661023a565b005b6100ba6102a6565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100b0600480360360208110156100f957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102c2565b6100b06004803603606081101561012c57600080fd5b63ffffffff8235169160208101359181019060608101604082013564010000000081111561015957600080fd5b82018360208201111561016b57600080fd5b8035906020019184600183028401116401000000008311171561018d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103b1945050505050565b6100b0610592565b6100ba6106ae565b6100b0600480360360408110156101f457600080fd5b5063ffffffff81351690602001356106d0565b6100b06004803603602081101561021d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610791565b6002805463ffffffff74010000000000000000000000000000000000000000808304821660018181019093169091027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff909316929092179092556102a18383836000610a9d565b505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b6102ca610c06565b73ffffffffffffffffffffffffffffffffffffffff166102e86106ae565b73ffffffffffffffffffffffffffffffffffffffff161461036a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6103ba33610c0a565b61042557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f217265706c696361000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b82826104318282610cb3565b61049c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f2172656d6f746520726f75746572000000000000000000000000000000000000604482015290519081900360640190fd5b60006104a88482610cd2565b90506104d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008216610cf6565b156104e9576104e48682610d16565b61058a565b6105147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008216610d23565b15610523576104e48682610d2c565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f2176616c696420616374696f6e00000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050565b61059a610c06565b73ffffffffffffffffffffffffffffffffffffffff166105b86106ae565b73ffffffffffffffffffffffffffffffffffffffff161461063a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516201000090910473ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff169055565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1690565b6106d8610c06565b73ffffffffffffffffffffffffffffffffffffffff166106f66106ae565b73ffffffffffffffffffffffffffffffffffffffff161461077857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b63ffffffff909116600090815260016020526040902055565b610799610c06565b73ffffffffffffffffffffffffffffffffffffffff166107b76106ae565b73ffffffffffffffffffffffffffffffffffffffff161461083957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166108a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117066026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516936201000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b600054610100900460ff16806109575750610957610d39565b80610965575060005460ff16155b6109ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061174d602e913960400191505060405180910390fd5b600054610100900460ff16158015610a2057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790558015610a8f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b803b15155b919050565b6000610aa885610d4a565b9050600084610ac057610abb8484610dcc565b610aca565b610aca8484610e17565b9050610ad4610e20565b73ffffffffffffffffffffffffffffffffffffffff1663d34686398784846040518463ffffffff1660e01b8152600401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b50578181015183820152602001610b38565b50505050905090810190601f168015610b7d5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b5050604080518681528815156020820152815163ffffffff808a1695508b1693507fc33c46696831ce09e40c8eb57b62d0d0cd48c408d38fa19f9a8ba3138415db10929181900390910190a3505050505050565b3390565b600254604080517f5190bc5300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015291516000939290921691635190bc5391602480820192602092909190829003018186803b158015610c8157600080fd5b505afa158015610c95573d6000803e3d6000fd5b505050506040513d6020811015610cab57600080fd5b505192915050565b63ffffffff821660009081526001602052604090205481145b92915050565b815160009060208401610ced64ffffffffff85168284610ebc565b95945050505050565b600060015b610d0483610f1d565b6002811115610d0f57fe5b1492915050565b60016102a1838284610f58565b60006002610cfb565b60006102a1838284610f58565b6000610d4430610a93565b15905090565b63ffffffff811660009081526001602052604090205480610a9857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2172656d6f746500000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b606060025b8383604051602001808460ff1660f81b81526001018363ffffffff1660e01b81526004018281526020019350505050604051602081830303815290604052905092915050565b60606001610dd1565b600254604080517f9fa92f9d000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691639fa92f9d916004808301926020929190829003018186803b158015610e8b57600080fd5b505afa158015610e9f573d6000803e3d6000fd5b505050506040513d6020811015610eb557600080fd5b5051905090565b600080610ec98484611014565b9050604051811115610ed9575060005b80610f07577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610f16565b610f12858585611086565b9150505b9392505050565b6000610f4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611099565b60ff166002811115610ccc57fe5b6000610f857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661109f565b90506000610fb47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000084166110d0565b604080518481528615156020820152815192935063ffffffff80851693908916927faa15aa1b86193c9d924f48e0c48b3cba78f17e281109c7de2f865c5a1c3d7009928290030190a361100d8585158385600101610a9d565b5050505050565b81810182811015610ccc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60d81c90565b6000610ccc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600160206110fd565b6000610ccc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600160045b60008160200360080260ff1661111485858561111e565b901c949350505050565b600060ff821661113057506000610f16565b611139846112c9565b6bffffffffffffffffffffffff166111548460ff8516611014565b111561123357611195611166856112dd565b6bffffffffffffffffffffffff1661117d866112c9565b6bffffffffffffffffffffffff16858560ff166112f1565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111f85781810151838201526020016111e0565b50505050905090810190601f1680156112255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff161115611290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061177b603a913960400191505060405180910390fd5b60088202600061129f866112dd565b6bffffffffffffffffffffffff16905060006112ba8361144c565b91909501511695945050505050565b60181c6bffffffffffffffffffffffff1690565b60781c6bffffffffffffffffffffffff1690565b606060006112fe86611495565b915050600061130c86611495565b915050600061131a86611495565b915050600061132886611495565b9150508383838360405160200180806117b5603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a820152605001602161172c82397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600080601f5b600f8160ff1611156114fd5760ff600882021684901c6114ba81611569565b61ffff16841793508160ff166010146114d557601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161149b565b50600f5b60ff8160ff1610156115635760ff600882021684901c61152081611569565b61ffff16831792508160ff1660001461153b57601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611501565b50915091565b600061157b60048360ff16901c611599565b60ff161760081b62ffff001661159082611599565b60ff1617919050565b600060f08083179060ff821614156115b5576030915050610a98565b8060ff1660f114156115cb576031915050610a98565b8060ff1660f214156115e1576032915050610a98565b8060ff1660f314156115f7576033915050610a98565b8060ff1660f4141561160d576034915050610a98565b8060ff1660f51415611623576035915050610a98565b8060ff1660f61415611639576036915050610a98565b8060ff1660f7141561164f576037915050610a98565b8060ff1660f81415611665576038915050610a98565b8060ff1660f9141561167b576039915050610a98565b8060ff1660fa1415611691576061915050610a98565b8060ff1660fb14156116a7576062915050610a98565b8060ff1660fc14156116bd576063915050610a98565b8060ff1660fd14156116d3576064915050610a98565b8060ff1660fe14156116e9576065915050610a98565b8060ff1660ff14156116ff576066915050610a98565b5091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573732e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656454797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220b9f9b9be90717009d3fad731071ccb2e2a4bfc72da6e1d10f7b9f357722d933064736f6c63430007060033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564";

export class PingPongRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _xAppConnectionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PingPongRouter> {
    return super.deploy(
      _xAppConnectionManager,
      overrides || {}
    ) as Promise<PingPongRouter>;
  }
  getDeployTransaction(
    _xAppConnectionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_xAppConnectionManager, overrides || {});
  }
  attach(address: string): PingPongRouter {
    return super.attach(address) as PingPongRouter;
  }
  connect(signer: Signer): PingPongRouter__factory {
    return super.connect(signer) as PingPongRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PingPongRouterInterface {
    return new utils.Interface(_abi) as PingPongRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PingPongRouter {
    return new Contract(address, _abi, signerOrProvider) as PingPongRouter;
  }
}
